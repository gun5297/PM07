.tagSelector h1{color: #0cf; font-size: 20px;}
.tagSelector p{color: #0c0; font-size: 15px;}
.tagSelector span{color: #600; font-size: 22px;}
/*  ? tagSelector */

.idSelector #paragraph1{font-size: 15px; text-decoration: overline;}
.idSelector #paragraph2{font-size: 25px; text-decoration: line-through;}
.idSelector #paragraph3{font-size: 35px; text-decoration: underline;}
/*  ? id Selector
    ?   class = .class / id = #id  */

.classSelector .f_size{
    font-size: 20px;
}
.classSelector .f_weight{
    font-weight: bold;
}
.classSelector  .f_color{
    color: steelblue;
}
/*  ? class Selector
    ? html에서 class에 띄어쓰기를 하면 다수 지정할 수 있고
    ? 그에 해당하는 class만 지정해서 css를 설정할 수 있다. */

.attrSelector fieldset{
    border: 1px solid #555; background-color: steelblue;
}
.attrSelector fieldset legend{
    border: 1px solid #555; background-color: slateblue; color: yellow;
    padding: 10px; border-radius: 10px;
}
.attrSelector fieldset ul{
    margin: 0; padding: 0; list-style: none;
}
.attrSelector fieldset ul li{
    font-size: 14px; line-height: 30px;
}
.attrSelector fieldset ul li label,
.attrSelector fieldset ul li input{
    vertical-align: middle; display: inline-block;
}

.attrSelector fieldset ul li input[type='text']{
    background-color: pink; border: 1px solid darkred;
}
.attrSelector fieldset ul li input[type='password']{
    background-color: lightseagreen; border: 1px solid greenyellow;
}
.attrSelector fieldset ul li input[type='radio']{
    width: 25px; height: 25px
}
/*  ? attrSelect
    ?   -> input[type='radio']처럼 attr의 value를 잡아서 지정할 수 있음 */

.directSelector > h1{
    font-size: 28px; color: slateblue;
}
.directSelector > span{
    font-size: 15px; color: red;
}
/*  ? '>'는 직계 라인에 있는 태그만 잡을 수 있게 되는데 span같은 경우에는
    ? span 안에 span이 동일하게 적용 되어 가장 안쪽에 있는 span에 까지 css가 적용이 된 것
    ? 이를 버블현상이라고 하며 안 좋은 것중 하나 */

.stringAttrSelector img[src$=png]{
    width: 100px; height: 100px; border: 3px solid red;
}
.stringAttrSelector img[src$=gif]{
    width: 200px; height: 200px; border: 3px solid green;
}
.stringAttrSelector img[src$=jpg]{
    width: 300px; height: 300px; border: 3px solid blue;
}
/* 
    ?속성값일치선택자.
    ? ~= : 띄어쓰기 기준. 해당 단어 포함.
    ? ^= : 해당 단어로 시작하는 것만 선택.
    ? *= : 해당 단어가 들어가는 모든 대상 선택. (전,후 상관없음.)
    ? |= : 해당 단어로 시작하거나 -으로 구분되는 대상 선택. 
    ? $= : 해당 단어로 끝나는 대상 선택.
*/

.sameSelector h1 ~ h2{
    background-color: gray;
}
/*  ? '~'은 뒤에 있는 모든 것을 잡는 것
    ?   -> A ~ B = A 뒤에 있는 모든 B를 잡는 것 */

.sameSelector h1 + h2{
    font-size: 34px; color: violet;
}
/*  ? '+'는 바로 뒤의 대상을 잡는 것
    ?   -> A + B = A 바로 뒤에 있는 B를 잡는 것 */

.activeSelector h1{
    font-size: 12px; color: black;
}